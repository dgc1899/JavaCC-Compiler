/* Generated By:JavaCC: Do not edit this line. adderConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface adderConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int IDREACH = 6;
  /** RegularExpression Id. */
  int CLASSTYPE = 7;
  /** RegularExpression Id. */
  int VOID = 8;
  /** RegularExpression Id. */
  int NUMTYPES = 9;
  /** RegularExpression Id. */
  int FLOATTYPE = 10;
  /** RegularExpression Id. */
  int STRINGTYPE = 11;
  /** RegularExpression Id. */
  int CHARTYPE = 12;
  /** RegularExpression Id. */
  int BOOL = 13;
  /** RegularExpression Id. */
  int LPAR = 14;
  /** RegularExpression Id. */
  int RPAR = 15;
  /** RegularExpression Id. */
  int LBRACE = 16;
  /** RegularExpression Id. */
  int RBRACE = 17;
  /** RegularExpression Id. */
  int SEMICOLON = 18;
  /** RegularExpression Id. */
  int COLON = 19;
  /** RegularExpression Id. */
  int COMA = 20;
  /** RegularExpression Id. */
  int LOOPFOR = 21;
  /** RegularExpression Id. */
  int LOOPDO = 22;
  /** RegularExpression Id. */
  int LOOPWHILE = 23;
  /** RegularExpression Id. */
  int ARITM = 24;
  /** RegularExpression Id. */
  int ASIGN = 25;
  /** RegularExpression Id. */
  int CONDITION = 26;
  /** RegularExpression Id. */
  int RELAT = 27;
  /** RegularExpression Id. */
  int LOGIC = 28;
  /** RegularExpression Id. */
  int STRUCTTYPE = 29;
  /** RegularExpression Id. */
  int CLASS = 30;
  /** RegularExpression Id. */
  int ALT = 31;
  /** RegularExpression Id. */
  int FOREACH = 32;
  /** RegularExpression Id. */
  int CATCH = 33;
  /** RegularExpression Id. */
  int TRYBLOCK = 34;
  /** RegularExpression Id. */
  int PRINTOUT = 35;
  /** RegularExpression Id. */
  int IFSTRUCT = 36;
  /** RegularExpression Id. */
  int SWITCHSTRUCT = 37;
  /** RegularExpression Id. */
  int THEN = 38;
  /** RegularExpression Id. */
  int NUMBER = 39;
  /** RegularExpression Id. */
  int LETTER = 40;
  /** RegularExpression Id. */
  int UNDERSC = 41;
  /** RegularExpression Id. */
  int WORD = 42;
  /** RegularExpression Id. */
  int IDENTIFIER = 43;
  /** RegularExpression Id. */
  int STRING = 44;
  /** RegularExpression Id. */
  int PACKEXP = 45;
  /** RegularExpression Id. */
  int IMPORT = 46;
  /** RegularExpression Id. */
  int HCLASS = 47;
  /** RegularExpression Id. */
  int DEF = 48;
  /** RegularExpression Id. */
  int CONST = 49;
  /** RegularExpression Id. */
  int RETURN = 50;
  /** RegularExpression Id. */
  int ENUM = 51;
  /** RegularExpression Id. */
  int LIST = 52;
  /** RegularExpression Id. */
  int STACK = 53;
  /** RegularExpression Id. */
  int QUEUE = 54;
  /** RegularExpression Id. */
  int ARRAY = 55;
  /** RegularExpression Id. */
  int STRUCT = 56;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\"\\t\"",
    "<IDREACH>",
    "\"abstract | static | const | implements | clascy \"",
    "\"void \"",
    "<NUMTYPES>",
    "<FLOATTYPE>",
    "\"string \"",
    "\"char \"",
    "\"bool \"",
    "\"( \"",
    "\") \"",
    "\"{ \"",
    "\"} \"",
    "\"; \"",
    "\": \"",
    "\", \"",
    "\"for \"",
    "\"do \"",
    "\"while \"",
    "\"+ | - | * | / \"",
    "\"= \"",
    "\"true | false \"",
    "<RELAT>",
    "<LOGIC>",
    "<STRUCTTYPE>",
    "\"class \"",
    "<ALT>",
    "<FOREACH>",
    "<CATCH>",
    "\"try \"",
    "\"print | println | writeline\"",
    "\"if \"",
    "\"switch | stoom \"",
    "\"then \"",
    "<NUMBER>",
    "<LETTER>",
    "\"_\"",
    "<WORD>",
    "<IDENTIFIER>",
    "<STRING>",
    "\"packexp\"",
    "\"import\"",
    "\">> \"",
    "\"def \"",
    "\"const \"",
    "\"return \"",
    "\"enum \"",
    "\"list \"",
    "\"stack \"",
    "\"queue \"",
    "\"array \"",
    "\"struct \"",
  };

}
