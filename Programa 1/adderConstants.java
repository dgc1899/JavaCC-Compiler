/* Generated By:JavaCC: Do not edit this line. adderConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface adderConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int IDREACH = 6;
  /** RegularExpression Id. */
  int CLASSTYPE = 7;
  /** RegularExpression Id. */
  int VOID = 8;
  /** RegularExpression Id. */
  int NUMTYPES = 9;
  /** RegularExpression Id. */
  int FLOATTYPE = 10;
  /** RegularExpression Id. */
  int STRINGTYPE = 11;
  /** RegularExpression Id. */
  int CHARTYPE = 12;
  /** RegularExpression Id. */
  int BOOL = 13;
  /** RegularExpression Id. */
  int LPAR = 14;
  /** RegularExpression Id. */
  int RPAR = 15;
  /** RegularExpression Id. */
  int LBRACE = 16;
  /** RegularExpression Id. */
  int RBRACE = 17;
  /** RegularExpression Id. */
  int SEMICOLON = 18;
  /** RegularExpression Id. */
  int LOOP = 19;
  /** RegularExpression Id. */
  int ARITM = 20;
  /** RegularExpression Id. */
  int CONDITION = 21;
  /** RegularExpression Id. */
  int RELAT = 22;
  /** RegularExpression Id. */
  int STRUCTTYPE = 23;
  /** RegularExpression Id. */
  int CLASS = 24;
  /** RegularExpression Id. */
  int ALT = 25;
  /** RegularExpression Id. */
  int FOREACH = 26;
  /** RegularExpression Id. */
  int CATCH = 27;
  /** RegularExpression Id. */
  int TRYBLOCK = 28;
  /** RegularExpression Id. */
  int PRINTOUT = 29;
  /** RegularExpression Id. */
  int IFSTRUCT = 30;
  /** RegularExpression Id. */
  int SWITCHSTRUCT = 31;
  /** RegularExpression Id. */
  int NUMBER = 32;
  /** RegularExpression Id. */
  int IDENTIFIER = 33;
  /** RegularExpression Id. */
  int STRING = 34;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\"\\t\"",
    "<IDREACH>",
    "\"abstract | static | const | implements | clascy \"",
    "\"void \"",
    "<NUMTYPES>",
    "<FLOATTYPE>",
    "\"string \"",
    "\"char \"",
    "\"bool \"",
    "\"( \"",
    "\") \"",
    "\"{ \"",
    "\"} \"",
    "\"; \"",
    "\"for | do | while \"",
    "\"= | + | - | * | / \"",
    "\"true | false \"",
    "<RELAT>",
    "<STRUCTTYPE>",
    "\"class \"",
    "<ALT>",
    "<FOREACH>",
    "<CATCH>",
    "\"try \"",
    "\"print | println | writeline\"",
    "\"if \"",
    "\"switch | stoom \"",
    "<NUMBER>",
    "<IDENTIFIER>",
    "<STRING>",
  };

}
